From a3718753b6ad20381effcac6c8d119b7f76af22d Mon Sep 17 00:00:00 2001
From: Roger Pau Monne <roger.pau@citrix.com>
Date: Wed, 23 Jul 2025 11:09:46 +0200
Subject: [PATCH] x86/hvmloader: account for external components consuming PCI
 window space
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

It's possible for external components to steal part of the end of the low
PCI MMIO window, they would account for this by setting the stolen region
as revered in the e820 memory map.

Add some logic in hvmloader to check whether the chosen PCI window end
address overlaps with reserved regions, and it that case adjust the end of
the window to take the reservation into account.

Signed-off-by: Roger Pau Monn√© <roger.pau@citrix.com>
---
 tools/firmware/hvmloader/pci.c | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/tools/firmware/hvmloader/pci.c b/tools/firmware/hvmloader/pci.c
index c41c8d946ac4..a237fd2a19ba 100644
--- a/tools/firmware/hvmloader/pci.c
+++ b/tools/firmware/hvmloader/pci.c
@@ -62,6 +62,23 @@ static bool check_overlap_all(uint64_t start, uint64_t size)
     return false;
 }
 
+static void adjust_pci_hole_end(void)
+{
+    unsigned int i;
+
+    for ( i = 0; i < memory_map.nr_map; i++ )
+    {
+        if ( memory_map.map[i].type == E820_RESERVED &&
+             check_overlap(pci_mem_end - 1, 0,
+                           memory_map.map[i].addr, memory_map.map[i].size) )
+        {
+            printf("PCI low MMIO hole end adjusted to %x\n",
+                    (uint32_t)memory_map.map[i].addr);
+            pci_mem_end = memory_map.map[i].addr;
+        }
+    }
+}
+
 /* Find the lowest RMRR ending above base but below 4G. */
 static int find_next_rmrr(uint32_t base)
 {
@@ -128,6 +145,13 @@ void pci_setup(void)
     BUILD_BUG_ON((typeof(*pci_devfn_decode_type))PCI_COMMAND_MASTER !=
                  PCI_COMMAND_MASTER);
 
+    /*
+     * Other components in the system might have reserved memory from the end
+     * of the PCI hole, adjust the usable window by hvmloader to take that into
+     * account.
+     */
+    adjust_pci_hole_end();
+
     s = xenstore_read(HVM_XS_ALLOW_MEMORY_RELOCATE, NULL);
     if ( s )
         allow_memory_relocate = strtoll(s, NULL, 0);
-- 
2.49.0

