vpci: Drop const from callback

Drop const from the pci_dev in the vpci write callback in preparation for
caching some state in the pci_dev.

No functional change.

Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
diff --git a/tools/tests/vpci/emul.h b/tools/tests/vpci/emul.h
index da446bba86b4..8447c09995bb 100644
--- a/tools/tests/vpci/emul.h
+++ b/tools/tests/vpci/emul.h
@@ -53,7 +53,7 @@ struct vcpu
 };
 
 extern const struct vcpu *current;
-extern const struct pci_dev test_pdev;
+extern struct pci_dev test_pdev;
 
 typedef bool spinlock_t;
 #define spin_lock_init(l) (*(l) = false)
diff --git a/tools/tests/vpci/main.c b/tools/tests/vpci/main.c
index 33223db3eb77..fedded31613f 100644
--- a/tools/tests/vpci/main.c
+++ b/tools/tests/vpci/main.c
@@ -23,7 +23,7 @@ static struct vpci vpci;
 
 static struct domain d;
 
-const struct pci_dev test_pdev = {
+struct pci_dev test_pdev = {
     .vpci = &vpci,
 };
 
@@ -40,7 +40,7 @@ static uint32_t vpci_read8(const struct pci_dev *pdev, unsigned int reg,
     return *(uint8_t *)data;
 }
 
-static void vpci_write8(const struct pci_dev *pdev, unsigned int reg,
+static void vpci_write8(struct pci_dev *pdev, unsigned int reg,
                         uint32_t val, void *data)
 {
     *(uint8_t *)data = val;
@@ -52,7 +52,7 @@ static uint32_t vpci_read16(const struct pci_dev *pdev, unsigned int reg,
     return *(uint16_t *)data;
 }
 
-static void vpci_write16(const struct pci_dev *pdev, unsigned int reg,
+static void vpci_write16(struct pci_dev *pdev, unsigned int reg,
                          uint32_t val, void *data)
 {
     *(uint16_t *)data = val;
@@ -64,7 +64,7 @@ static uint32_t vpci_read32(const struct pci_dev *pdev, unsigned int reg,
     return *(uint32_t *)data;
 }
 
-static void vpci_write32(const struct pci_dev *pdev, unsigned int reg,
+static void vpci_write32(struct pci_dev *pdev, unsigned int reg,
                          uint32_t val, void *data)
 {
     *(uint32_t *)data = val;
@@ -83,7 +83,7 @@ static uint32_t vpci_read32_mask(const struct pci_dev *pdev, unsigned int reg,
     return md->val;
 }
 
-static void vpci_write32_mask(const struct pci_dev *pdev, unsigned int reg,
+static void vpci_write32_mask(struct pci_dev *pdev, unsigned int reg,
                               uint32_t val, void *data)
 {
     struct mask_data *md = data;
diff --git a/xen/drivers/vpci/header.c b/xen/drivers/vpci/header.c
index ef6c965c081c..68711e82212c 100644
--- a/xen/drivers/vpci/header.c
+++ b/xen/drivers/vpci/header.c
@@ -520,7 +520,7 @@ static int modify_bars(const struct pci_dev *pdev, uint16_t cmd, bool rom_only)
 }
 
 static void cf_check cmd_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t cmd, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t cmd, void *data)
 {
     struct vpci_header *header = data;
 
@@ -561,7 +561,7 @@ static uint32_t cf_check guest_cmd_read(
 }
 
 static void cf_check bar_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_bar *bar = data;
     bool hi = false;
@@ -612,7 +612,7 @@ static void cf_check bar_write(
     pci_conf_write32(pdev->sbdf, reg, val);
 }
 
-static void cf_check guest_mem_bar_write(const struct pci_dev *pdev,
+static void cf_check guest_mem_bar_write(struct pci_dev *pdev,
                                          unsigned int reg, uint32_t val,
                                          void *data)
 {
@@ -676,7 +676,7 @@ static uint32_t cf_check guest_mem_bar_read(const struct pci_dev *pdev,
 }
 
 static void cf_check rom_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_header *header = &pdev->vpci->header;
     struct vpci_bar *rom = data;
diff --git a/xen/drivers/vpci/msi.c b/xen/drivers/vpci/msi.c
index dd6620ec5674..8363c5597258 100644
--- a/xen/drivers/vpci/msi.c
+++ b/xen/drivers/vpci/msi.c
@@ -35,7 +35,7 @@ static uint32_t cf_check control_read(
 }
 
 static void cf_check control_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
     unsigned int vectors = min_t(uint8_t,
@@ -107,7 +107,7 @@ static uint32_t cf_check address_read(
 }
 
 static void cf_check address_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
 
@@ -128,7 +128,7 @@ static uint32_t cf_check address_hi_read(
 }
 
 static void cf_check address_hi_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
 
@@ -149,7 +149,7 @@ static uint32_t cf_check data_read(
 }
 
 static void cf_check data_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
 
@@ -168,7 +168,7 @@ static uint32_t cf_check mask_read(
 }
 
 static void cf_check mask_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
     uint32_t dmask = msi->mask ^ val;
diff --git a/xen/drivers/vpci/msix.c b/xen/drivers/vpci/msix.c
index fbe710ab92ef..89d88aa0a065 100644
--- a/xen/drivers/vpci/msix.c
+++ b/xen/drivers/vpci/msix.c
@@ -71,7 +71,7 @@ static void update_entry(struct vpci_msix_entry *entry,
 }
 
 static void cf_check control_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_msix *msix = data;
     bool new_masked = val & PCI_MSIX_FLAGS_MASKALL;
diff --git a/xen/drivers/vpci/vpci.c b/xen/drivers/vpci/vpci.c
index 1e6aa5d799b9..e5cf7b1feb3a 100644
--- a/xen/drivers/vpci/vpci.c
+++ b/xen/drivers/vpci/vpci.c
@@ -198,7 +198,7 @@ static uint32_t cf_check vpci_ignored_read(
 }
 
 static void cf_check vpci_ignored_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
 }
 
@@ -227,7 +227,7 @@ uint32_t cf_check vpci_hw_read32(
 }
 
 void cf_check vpci_hw_write16(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     pci_conf_write16(pdev->sbdf, reg, val);
 }
@@ -524,7 +524,7 @@ uint32_t vpci_read(pci_sbdf_t sbdf, unsigned int reg, unsigned int size)
 /*
  * Perform a maybe partial write to a register.
  */
-static void vpci_write_helper(const struct pci_dev *pdev,
+static void vpci_write_helper(struct pci_dev *pdev,
                               const struct vpci_register *r, unsigned int size,
                               unsigned int offset, uint32_t data)
 {
@@ -551,7 +551,7 @@ void vpci_write(pci_sbdf_t sbdf, unsigned int reg, unsigned int size,
                 uint32_t data)
 {
     struct domain *d = current->domain;
-    const struct pci_dev *pdev;
+    struct pci_dev *pdev;
     const struct vpci_register *r;
     unsigned int data_offset = 0;
 
diff --git a/xen/include/xen/vpci.h b/xen/include/xen/vpci.h
index da8d0f41e6f4..8f3d89833602 100644
--- a/xen/include/xen/vpci.h
+++ b/xen/include/xen/vpci.h
@@ -10,7 +10,7 @@
 typedef uint32_t vpci_read_t(const struct pci_dev *pdev, unsigned int reg,
                              void *data);
 
-typedef void vpci_write_t(const struct pci_dev *pdev, unsigned int reg,
+typedef void vpci_write_t(struct pci_dev *pdev, unsigned int reg,
                           uint32_t val, void *data);
 
 typedef int vpci_register_init_t(struct pci_dev *dev);
@@ -77,7 +77,7 @@ uint32_t cf_check vpci_hw_read16(
 uint32_t cf_check vpci_hw_read32(
     const struct pci_dev *pdev, unsigned int reg, void *data);
 void cf_check vpci_hw_write16(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data);
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data);
 
 /*
  * Check for pending vPCI operations on this vcpu. Returns true if the vcpu
