vpci: Drop const from callback

Drop const from the pci_dev in the vpci write callback in preparation for
caching some state in the pci_dev.

No functional change.

Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
diff --git a/xen/drivers/vpci/header.c b/xen/drivers/vpci/header.c
index 3c794f486d65..48572b206c77 100644
--- a/xen/drivers/vpci/header.c
+++ b/xen/drivers/vpci/header.c
@@ -330,7 +330,7 @@ static int modify_bars(const struct pci_dev *pdev, uint16_t cmd, bool rom_only)
     return 0;
 }
 
-static void cmd_write(const struct pci_dev *pdev, unsigned int reg,
+static void cmd_write(struct pci_dev *pdev, unsigned int reg,
                       uint32_t cmd, void *data)
 {
     uint16_t current_cmd = pci_conf_read16(pdev->sbdf, reg);
@@ -351,7 +351,7 @@ static void cmd_write(const struct pci_dev *pdev, unsigned int reg,
         pci_conf_write16(pdev->sbdf, reg, cmd);
 }
 
-static void bar_write(const struct pci_dev *pdev, unsigned int reg,
+static void bar_write(struct pci_dev *pdev, unsigned int reg,
                       uint32_t val, void *data)
 {
     struct vpci_bar *bar = data;
@@ -397,7 +397,7 @@ static void bar_write(const struct pci_dev *pdev, unsigned int reg,
     pci_conf_write32(pdev->sbdf, reg, val);
 }
 
-static void rom_write(const struct pci_dev *pdev, unsigned int reg,
+static void rom_write(struct pci_dev *pdev, unsigned int reg,
                       uint32_t val, void *data)
 {
     struct vpci_header *header = &pdev->vpci->header;
diff --git a/xen/drivers/vpci/msi.c b/xen/drivers/vpci/msi.c
index 75010762ed6d..be6862bce4f9 100644
--- a/xen/drivers/vpci/msi.c
+++ b/xen/drivers/vpci/msi.c
@@ -34,7 +34,7 @@ static uint32_t control_read(const struct pci_dev *pdev, unsigned int reg,
            (msi->address64 ? PCI_MSI_FLAGS_64BIT : 0);
 }
 
-static void control_write(const struct pci_dev *pdev, unsigned int reg,
+static void control_write(struct pci_dev *pdev, unsigned int reg,
                           uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
@@ -98,7 +98,7 @@ static uint32_t address_read(const struct pci_dev *pdev, unsigned int reg,
     return msi->address;
 }
 
-static void address_write(const struct pci_dev *pdev, unsigned int reg,
+static void address_write(struct pci_dev *pdev, unsigned int reg,
                           uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
@@ -119,7 +119,7 @@ static uint32_t address_hi_read(const struct pci_dev *pdev, unsigned int reg,
     return msi->address >> 32;
 }
 
-static void address_hi_write(const struct pci_dev *pdev, unsigned int reg,
+static void address_hi_write(struct pci_dev *pdev, unsigned int reg,
                              uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
@@ -140,7 +140,7 @@ static uint32_t data_read(const struct pci_dev *pdev, unsigned int reg,
     return msi->data;
 }
 
-static void data_write(const struct pci_dev *pdev, unsigned int reg,
+static void data_write(struct pci_dev *pdev, unsigned int reg,
                        uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
@@ -159,7 +159,7 @@ static uint32_t mask_read(const struct pci_dev *pdev, unsigned int reg,
     return msi->mask;
 }
 
-static void mask_write(const struct pci_dev *pdev, unsigned int reg,
+static void mask_write(struct pci_dev *pdev, unsigned int reg,
                        uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
diff --git a/xen/drivers/vpci/msix.c b/xen/drivers/vpci/msix.c
index 38c1e7e5dd5b..8db5cd559ff1 100644
--- a/xen/drivers/vpci/msix.c
+++ b/xen/drivers/vpci/msix.c
@@ -69,7 +69,7 @@ static int update_entry(struct vpci_msix_entry *entry,
     return 0;
 }
 
-static void control_write(const struct pci_dev *pdev, unsigned int reg,
+static void control_write(struct pci_dev *pdev, unsigned int reg,
                           uint32_t val, void *data)
 {
     uint8_t slot = PCI_SLOT(pdev->devfn), func = PCI_FUNC(pdev->devfn);
diff --git a/xen/drivers/vpci/vpci.c b/xen/drivers/vpci/vpci.c
index cbd1bac7fc33..4ccbba4dbbe2 100644
--- a/xen/drivers/vpci/vpci.c
+++ b/xen/drivers/vpci/vpci.c
@@ -106,7 +106,7 @@ static uint32_t vpci_ignored_read(const struct pci_dev *pdev, unsigned int reg,
     return ~(uint32_t)0;
 }
 
-static void vpci_ignored_write(const struct pci_dev *pdev, unsigned int reg,
+static void vpci_ignored_write(struct pci_dev *pdev, unsigned int reg,
                                uint32_t val, void *data)
 {
 }
@@ -386,7 +386,7 @@ uint32_t vpci_read(pci_sbdf_t sbdf, unsigned int reg, unsigned int size)
  * the logic in vpci_write will have to be expanded in order to correctly
  * deal with them.
  */
-static void vpci_write_helper(const struct pci_dev *pdev,
+static void vpci_write_helper(struct pci_dev *pdev,
                               const struct vpci_register *r, unsigned int size,
                               unsigned int offset, uint32_t data)
 {
@@ -408,7 +408,7 @@ void vpci_write(pci_sbdf_t sbdf, unsigned int reg, unsigned int size,
                 uint32_t data)
 {
     const struct domain *d = current->domain;
-    const struct pci_dev *pdev;
+    struct pci_dev *pdev;
     const struct vpci_register *r;
     unsigned int data_offset = 0;
     const unsigned long *ro_map = pci_get_ro_map(sbdf.seg);
diff --git a/xen/include/xen/vpci.h b/xen/include/xen/vpci.h
index 5295d4c9907b..e2bc2cdefecd 100644
--- a/xen/include/xen/vpci.h
+++ b/xen/include/xen/vpci.h
@@ -10,7 +10,7 @@
 typedef uint32_t vpci_read_t(const struct pci_dev *pdev, unsigned int reg,
                              void *data);
 
-typedef void vpci_write_t(const struct pci_dev *pdev, unsigned int reg,
+typedef void vpci_write_t(struct pci_dev *pdev, unsigned int reg,
                           uint32_t val, void *data);
 
 typedef int vpci_register_init_t(struct pci_dev *dev);
