vpci: Drop const from callback

Drop const from the pci_dev in the vpci write callback in preparation for
caching some state in the pci_dev.

No functional change.

Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
diff --git a/tools/tests/vpci/emul.h b/tools/tests/vpci/emul.h
index f03e3a56d181..6b1a7ca3aeb4 100644
--- a/tools/tests/vpci/emul.h
+++ b/tools/tests/vpci/emul.h
@@ -54,7 +54,7 @@ struct vcpu
 };
 
 extern const struct vcpu *current;
-extern const struct pci_dev test_pdev;
+extern struct pci_dev test_pdev;
 
 typedef bool spinlock_t;
 #define spin_lock_init(l) (*(l) = false)
diff --git a/tools/tests/vpci/main.c b/tools/tests/vpci/main.c
index b9a0a6006bb9..c823c1dec730 100644
--- a/tools/tests/vpci/main.c
+++ b/tools/tests/vpci/main.c
@@ -23,7 +23,7 @@ static struct vpci vpci;
 
 const static struct domain d;
 
-const struct pci_dev test_pdev = {
+struct pci_dev test_pdev = {
     .vpci = &vpci,
 };
 
@@ -40,7 +40,7 @@ static uint32_t vpci_read8(const struct pci_dev *pdev, unsigned int reg,
     return *(uint8_t *)data;
 }
 
-static void vpci_write8(const struct pci_dev *pdev, unsigned int reg,
+static void vpci_write8(struct pci_dev *pdev, unsigned int reg,
                         uint32_t val, void *data)
 {
     *(uint8_t *)data = val;
@@ -52,7 +52,7 @@ static uint32_t vpci_read16(const struct pci_dev *pdev, unsigned int reg,
     return *(uint16_t *)data;
 }
 
-static void vpci_write16(const struct pci_dev *pdev, unsigned int reg,
+static void vpci_write16(struct pci_dev *pdev, unsigned int reg,
                          uint32_t val, void *data)
 {
     *(uint16_t *)data = val;
@@ -64,7 +64,7 @@ static uint32_t vpci_read32(const struct pci_dev *pdev, unsigned int reg,
     return *(uint32_t *)data;
 }
 
-static void vpci_write32(const struct pci_dev *pdev, unsigned int reg,
+static void vpci_write32(struct pci_dev *pdev, unsigned int reg,
                          uint32_t val, void *data)
 {
     *(uint32_t *)data = val;
diff --git a/xen/drivers/vpci/header.c b/xen/drivers/vpci/header.c
index 766fd98b2196..6adf65a2cccc 100644
--- a/xen/drivers/vpci/header.c
+++ b/xen/drivers/vpci/header.c
@@ -361,7 +361,7 @@ static int modify_bars(const struct pci_dev *pdev, uint16_t cmd, bool rom_only)
 }
 
 static void cf_check cmd_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t cmd, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t cmd, void *data)
 {
     struct vpci_header *header = data;
 
@@ -382,7 +382,7 @@ static void cf_check cmd_write(
 }
 
 static void cf_check bar_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_bar *bar = data;
     bool hi = false;
@@ -430,7 +430,7 @@ static void cf_check bar_write(
 }
 
 static void cf_check rom_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_header *header = &pdev->vpci->header;
     struct vpci_bar *rom = data;
diff --git a/xen/drivers/vpci/msi.c b/xen/drivers/vpci/msi.c
index 8f2b59e61aa4..47a362ce4764 100644
--- a/xen/drivers/vpci/msi.c
+++ b/xen/drivers/vpci/msi.c
@@ -35,7 +35,7 @@ static uint32_t cf_check control_read(
 }
 
 static void cf_check control_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
     unsigned int vectors = min_t(uint8_t,
@@ -98,7 +98,7 @@ static uint32_t cf_check address_read(
 }
 
 static void cf_check address_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
 
@@ -119,7 +119,7 @@ static uint32_t cf_check address_hi_read(
 }
 
 static void cf_check address_hi_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
 
@@ -140,7 +140,7 @@ static uint32_t cf_check data_read(
 }
 
 static void cf_check data_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
 
@@ -159,7 +159,7 @@ static uint32_t cf_check mask_read(
 }
 
 static void cf_check mask_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_msi *msi = data;
     uint32_t dmask = msi->mask ^ val;
diff --git a/xen/drivers/vpci/msix.c b/xen/drivers/vpci/msix.c
index cafddcf3053c..ec74fefe1414 100644
--- a/xen/drivers/vpci/msix.c
+++ b/xen/drivers/vpci/msix.c
@@ -71,7 +71,7 @@ static void update_entry(struct vpci_msix_entry *entry,
 }
 
 static void cf_check control_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
     struct vpci_msix *msix = data;
     bool new_masked = val & PCI_MSIX_FLAGS_MASKALL;
diff --git a/xen/drivers/vpci/vpci.c b/xen/drivers/vpci/vpci.c
index 652807a4a454..3fe3d7930eb6 100644
--- a/xen/drivers/vpci/vpci.c
+++ b/xen/drivers/vpci/vpci.c
@@ -123,7 +123,7 @@ static uint32_t cf_check vpci_ignored_read(
 }
 
 static void cf_check vpci_ignored_write(
-    const struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
+    struct pci_dev *pdev, unsigned int reg, uint32_t val, void *data)
 {
 }
 
@@ -402,7 +402,7 @@ uint32_t vpci_read(pci_sbdf_t sbdf, unsigned int reg, unsigned int size)
  * the logic in vpci_write will have to be expanded in order to correctly
  * deal with them.
  */
-static void vpci_write_helper(const struct pci_dev *pdev,
+static void vpci_write_helper(struct pci_dev *pdev,
                               const struct vpci_register *r, unsigned int size,
                               unsigned int offset, uint32_t data)
 {
@@ -424,7 +424,7 @@ void vpci_write(pci_sbdf_t sbdf, unsigned int reg, unsigned int size,
                 uint32_t data)
 {
     const struct domain *d = current->domain;
-    const struct pci_dev *pdev;
+    struct pci_dev *pdev;
     const struct vpci_register *r;
     unsigned int data_offset = 0;
     const unsigned long *ro_map = pci_get_ro_map(sbdf.seg);
diff --git a/xen/include/xen/vpci.h b/xen/include/xen/vpci.h
index 0b8a2a3c745b..433e4b5e8e78 100644
--- a/xen/include/xen/vpci.h
+++ b/xen/include/xen/vpci.h
@@ -10,7 +10,7 @@
 typedef uint32_t vpci_read_t(const struct pci_dev *pdev, unsigned int reg,
                              void *data);
 
-typedef void vpci_write_t(const struct pci_dev *pdev, unsigned int reg,
+typedef void vpci_write_t(struct pci_dev *pdev, unsigned int reg,
                           uint32_t val, void *data);
 
 typedef int vpci_register_init_t(struct pci_dev *dev);
