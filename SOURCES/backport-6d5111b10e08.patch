From 6d5111b10e084d841284a56e962c61ad274f589e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Edwin=20T=C3=B6r=C3=B6k?= <edwin.torok@cloud.com>
Date: Wed, 27 Mar 2024 16:30:21 +0000
Subject: tools/ocaml: Fix warnings in config.ml
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fixes warnings such as:

  File "config.ml", line 102, characters 12-27:
  102 |         | Failure "int_of_string"   -> append (k, "expect int arg")
                          ^^^^^^^^^^^^^^^
  Warning 52: Code should not depend on the actual values of
  this constructor's arguments. They are only for information
  and may change in future versions. (See manual section 9.5)

Do not rely on the string values of the `Failure` exception, but use the
`_opt` functions instead.

Signed-off-by: Edwin Török <edwin.torok@cloud.com>
Acked-by: Christian Lindig <christian.lindig@cloud.com>
Tested-by: Andrew Cooper <andrew.cooper3@citrix.com>

diff --git a/tools/ocaml/xenstored/config.ml b/tools/ocaml/xenstored/config.ml
index 0ee7bc32ff59..638262361da9 100644
--- a/tools/ocaml/xenstored/config.ml
+++ b/tools/ocaml/xenstored/config.ml
@@ -83,25 +83,27 @@ let validate cf expected other =
 	let err = ref [] in
 	let append x = err := x :: !err in
 	List.iter (fun (k, v) ->
+		let parse ~err_msg parser v f =
+			match parser v with
+			| None -> append (k, err_msg)
+			| Some r -> f r
+		in
 		try
 			if not (List.mem_assoc k expected) then
 				other k v
 			else let ty = List.assoc k expected in
 			match ty with
 			| Unit f       -> f ()
-			| Bool f       -> f (bool_of_string v)
+			| Bool f       -> parse ~err_msg:"expect bool arg" bool_of_string_opt v f
 			| String f     -> f v
-			| Int f        -> f (int_of_string v)
-			| Float f      -> f (float_of_string v)
-			| Set_bool r   -> r := (bool_of_string v)
+			| Int f        -> parse ~err_msg:"expect int arg" int_of_string_opt v f
+			| Float f      -> parse ~err_msg:"expect float arg" float_of_string_opt v f
+			| Set_bool r   -> parse ~err_msg:"expect bool arg" bool_of_string_opt v (fun x -> r := x)
 			| Set_string r -> r := v
-			| Set_int r    -> r := int_of_string v
-			| Set_float r  -> r := (float_of_string v)
+			| Set_int r    -> parse ~err_msg:"expect int arg" int_of_string_opt v (fun x -> r:= x)
+			| Set_float r  -> parse ~err_msg:"expect float arg" float_of_string_opt v (fun x -> r := x)
 		with
 		| Not_found                 -> append (k, "unknown key")
-		| Failure "int_of_string"   -> append (k, "expect int arg")
-		| Failure "bool_of_string"  -> append (k, "expect bool arg")
-		| Failure "float_of_string" -> append (k, "expect float arg")
 		| exn                       -> append (k, Printexc.to_string exn)
 		) cf;
 	if !err != [] then raise (Error !err)
